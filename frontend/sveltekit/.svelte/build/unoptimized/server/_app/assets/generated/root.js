/* .svelte/assets/generated/root.svelte generated by Svelte v3.31.0 */
import {
	create_ssr_component,
	missing_component,
	validate_component
} from "../../../web_modules/svelte/internal.js";

import { setContext, afterUpdate } from "../../../web_modules/svelte.js";
import ErrorComponent from "../components/error.js";

const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { status = undefined } = $$props;
	let { error = undefined } = $$props;
	let { stores } = $$props;
	let { page } = $$props;
	let { components } = $$props;
	let { props_0 = null } = $$props;
	let { props_1 = null } = $$props;
	const Layout = components[0];
	setContext("__svelte__", stores);
	afterUpdate(stores.page.notify);
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);
	if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0) $$bindings.stores(stores);
	if ($$props.page === void 0 && $$bindings.page && page !== void 0) $$bindings.page(page);
	if ($$props.components === void 0 && $$bindings.components && components !== void 0) $$bindings.components(components);
	if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0) $$bindings.props_0(props_0);
	if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0) $$bindings.props_1(props_1);

	$: {
		stores.page.set(page);
	}

	return `


${validate_component(Layout, "Layout").$$render($$result, Object.assign(props_0 || {}), {}, {
		default: () => `${error
		? `${validate_component(ErrorComponent, "ErrorComponent").$$render($$result, { status, error }, {}, {})}`
		: `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {})}`}`
	})}`;
});

export default Root;
//# sourceMappingURL=root.js.map
