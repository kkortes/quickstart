import './index.css.proxy.js';
/* src/routes/index.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_component,
	claim_element,
	claim_space,
	claim_text,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "../../web_modules/svelte/internal.js";

import Counter from "../../_components/Counter.js";

function create_fragment(ctx) {
	let main;
	let h1;
	let t0;
	let t1;
	let counter;
	let t2;
	let p;
	let t3;
	let a;
	let t4;
	let t5;
	let current;
	counter = new Counter({});

	return {
		c() {
			main = element("main");
			h1 = element("h1");
			t0 = text("Hello world!");
			t1 = space();
			create_component(counter.$$.fragment);
			t2 = space();
			p = element("p");
			t3 = text("Visit the ");
			a = element("a");
			t4 = text("svelte.dev");
			t5 = text(" to learn how to build Svelte apps.");
			this.h();
		},
		l(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			h1 = claim_element(main_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Hello world!");
			h1_nodes.forEach(detach);
			t1 = claim_space(main_nodes);
			claim_component(counter.$$.fragment, main_nodes);
			t2 = claim_space(main_nodes);
			p = claim_element(main_nodes, "P", { class: true });
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "Visit the ");
			a = claim_element(p_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t4 = claim_text(a_nodes, "svelte.dev");
			a_nodes.forEach(detach);
			t5 = claim_text(p_nodes, " to learn how to build Svelte apps.");
			p_nodes.forEach(detach);
			main_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h1, "class", "svelte-i4crzb");
			attr(a, "href", "https://svelte.dev");
			attr(a, "class", "svelte-i4crzb");
			attr(p, "class", "svelte-i4crzb");
			attr(main, "class", "svelte-i4crzb");
		},
		m(target, anchor) {
			insert(target, main, anchor);
			append(main, h1);
			append(h1, t0);
			append(main, t1);
			mount_component(counter, main, null);
			append(main, t2);
			append(main, p);
			append(p, t3);
			append(p, a);
			append(a, t4);
			append(p, t5);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(counter.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(counter.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(main);
			destroy_component(counter);
		}
	};
}

class Routes extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Routes;
//# sourceMappingURL=index.js.map
